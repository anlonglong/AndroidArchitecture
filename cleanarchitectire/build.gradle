apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
android {

    def config = rootProject.extensions.getByName("ext")


    compileSdkVersion config["compile_sdk"]
    buildToolsVersion config["build_tools"]

    defaultConfig {
        applicationId "com.aillen.cleanarchitectire"
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode config["version_code"]
        versionName config["version_name"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    buildToolsVersion '27.0.3'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

kapt {
    arguments {
        arg("moduleName", project.getName())
    }
}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def developmentDependencies = rootProject.ext.development

    //Compile time dependencies 注解处理器的依赖
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    kapt applicationDependencies.archComponentsCompiler
    kapt applicationDependencies.daggerCompiler
    kapt applicationDependencies.arouteCompiler
    compileOnly applicationDependencies.javaxAnnotation
    compileOnly applicationDependencies.javaxInject
    implementation applicationDependencies.arouteApi

    //应用的依赖
    implementation applicationDependencies.kotlin
    implementation applicationDependencies.kotlinCoroutines
    implementation applicationDependencies.kotlinCoroutinesAndroid
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.constraintLayout
    implementation applicationDependencies.archComponents
    implementation applicationDependencies.cardView
    implementation applicationDependencies.recyclerView
    implementation applicationDependencies.design
    implementation applicationDependencies.androidAnnotations
    implementation applicationDependencies.glide
    implementation applicationDependencies.dagger
    implementation applicationDependencies.retrofit
    implementation applicationDependencies.okhttpLoggingInterceptor
    implementation applicationDependencies.paging
    implementation applicationDependencies.BaseRecyclerViewAdapterHelper

    //Development dependencies 只在debug模式下依赖
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
